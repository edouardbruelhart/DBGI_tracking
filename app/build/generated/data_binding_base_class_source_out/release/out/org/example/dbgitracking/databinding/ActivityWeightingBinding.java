// Generated by view binder compiler. Do not edit!
package org.example.dbgitracking.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.camera.view.PreviewView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.example.dbgitracking.R;

public final class ActivityWeightingBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView Spacing;

  @NonNull
  public final TextView chooseWeightLabel;

  @NonNull
  public final TextView extractionMethodLabel;

  @NonNull
  public final Button flashlightButton;

  @NonNull
  public final PreviewView previewView;

  @NonNull
  public final Button scanButtonFalcon;

  @NonNull
  public final TextView scanStatus;

  @NonNull
  public final Button submitButton;

  @NonNull
  public final EditText targetWeightInput;

  @NonNull
  public final EditText weightInput;

  private ActivityWeightingBinding(@NonNull ConstraintLayout rootView, @NonNull TextView Spacing,
      @NonNull TextView chooseWeightLabel, @NonNull TextView extractionMethodLabel,
      @NonNull Button flashlightButton, @NonNull PreviewView previewView,
      @NonNull Button scanButtonFalcon, @NonNull TextView scanStatus, @NonNull Button submitButton,
      @NonNull EditText targetWeightInput, @NonNull EditText weightInput) {
    this.rootView = rootView;
    this.Spacing = Spacing;
    this.chooseWeightLabel = chooseWeightLabel;
    this.extractionMethodLabel = extractionMethodLabel;
    this.flashlightButton = flashlightButton;
    this.previewView = previewView;
    this.scanButtonFalcon = scanButtonFalcon;
    this.scanStatus = scanStatus;
    this.submitButton = submitButton;
    this.targetWeightInput = targetWeightInput;
    this.weightInput = weightInput;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityWeightingBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityWeightingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_weighting, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityWeightingBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Spacing;
      TextView Spacing = ViewBindings.findChildViewById(rootView, id);
      if (Spacing == null) {
        break missingId;
      }

      id = R.id.chooseWeightLabel;
      TextView chooseWeightLabel = ViewBindings.findChildViewById(rootView, id);
      if (chooseWeightLabel == null) {
        break missingId;
      }

      id = R.id.extractionMethodLabel;
      TextView extractionMethodLabel = ViewBindings.findChildViewById(rootView, id);
      if (extractionMethodLabel == null) {
        break missingId;
      }

      id = R.id.flashlightButton;
      Button flashlightButton = ViewBindings.findChildViewById(rootView, id);
      if (flashlightButton == null) {
        break missingId;
      }

      id = R.id.previewView;
      PreviewView previewView = ViewBindings.findChildViewById(rootView, id);
      if (previewView == null) {
        break missingId;
      }

      id = R.id.scanButtonFalcon;
      Button scanButtonFalcon = ViewBindings.findChildViewById(rootView, id);
      if (scanButtonFalcon == null) {
        break missingId;
      }

      id = R.id.scanStatus;
      TextView scanStatus = ViewBindings.findChildViewById(rootView, id);
      if (scanStatus == null) {
        break missingId;
      }

      id = R.id.submitButton;
      Button submitButton = ViewBindings.findChildViewById(rootView, id);
      if (submitButton == null) {
        break missingId;
      }

      id = R.id.targetWeightInput;
      EditText targetWeightInput = ViewBindings.findChildViewById(rootView, id);
      if (targetWeightInput == null) {
        break missingId;
      }

      id = R.id.weightInput;
      EditText weightInput = ViewBindings.findChildViewById(rootView, id);
      if (weightInput == null) {
        break missingId;
      }

      return new ActivityWeightingBinding((ConstraintLayout) rootView, Spacing, chooseWeightLabel,
          extractionMethodLabel, flashlightButton, previewView, scanButtonFalcon, scanStatus,
          submitButton, targetWeightInput, weightInput);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
